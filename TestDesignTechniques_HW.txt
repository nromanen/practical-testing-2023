Variant 1 (Task 3 - another file)

1.Equivalence partitioning and Boundary value analysis
In a system designed to work out the tax to be paid: An employee has $1000 of salary tax free. The next $500 is taxed at 10%. The next $4000 is taxed at 22%. Any further amount is taxed by 40%. Salary cannot be larger than $6000.
1.Build equivalence classes (partitions) based on given information
2.Stand Out boundary values
3.Cover requirements above by tests (write test cases’ names and objectives) based on equivalence partitioning and boundary value analysis

	Invalid	Valid	Valid	Valid	Valid	Invalid
Class	=<0	1-1000	1001-1500	1501-5500	5501-6000	>6000
BVA	0	1             1000	1001     1500	1501  5500	5501 6000	6001






	Condition	Expected Result
1	Put value `0$` 	Message appears “Salary should be more, than 0”
2	Put value `1$` 	Message appears “Salary tax free”
3	Put value `1000$` 	Message appears “Salary tax free”
4	Put value `1001$` 	System counts ‘(1001-1000)*0.1=0.01$’ and shows results “tax to be paid=0.01$”  (taxed at 10%) 
5	Put value `1500$` 	System counts ‘(1500-1000)*0.1=50$’ and shows results “tax to be paid=50$”  (taxed at 10%) 
6	Put value `1501$` 	System counts ‘(1501-1000)*0.22=110.22$’ and shows results “tax to be paid=110.22$”  (taxed at 22%) 
7	Put value `5500$` 	System counts ‘(5500-1000)*0.22=990$’ and shows results “tax to be paid=990$”  (taxed at 22%)
8	Put value `5501$` 	System counts ‘(5501-1000)*0.4=1800.4$’ and shows results “tax to be paid=1800.4$”  (taxed at 40%) 
9	Put value `6000$` 	System counts ‘(6000-1000)*0.4=2000$’ and shows results “tax to be paid=2000$”  (taxed at 40%) 
10	Put value `6001$` 	Message appears “Salary should be less, than 6000$”
	Put value `$` 	


	Test Items	Test Data
	Verify tax are counted with 0%	1.Any number from 1 to 1000 (e.g. 750)
2.1
3.1000
	Verify tax are counted with 10%	1.Any number from 1001 to 1500 (e.g. 1200)
2.1001
3.1500
	Verify tax are counted with 22%	1.Any number from 1501 to 5500 (e.g. 3000)
2.1501
3.5500
	Verify tax are counted with 40%	1.Any number from 5501 to 6000 (e.g. 5700)
2.5501
3.6000
	Verify that message "Salary should be more, than 0“ appears if client enters 0$
	1.0
	Verify that message "Salary should be less, than 6000$“ appears if client enters >6000$
	1.6001
2.>6000 (e.g. 6500)
	Verify that error message "You have entered an incorrect value“ appears if client enters incorrect data
	1.Any number < 0 (e.g. -5)
2. Decimal number (e.g. 156.34)
3. Decimal number (e.g. 34,98)
4. Alphabetic characters (FDG)
5. Special characters (*^(%)

		




^











2.Decision tables
You take a loan in a bank. The bank gives you loan application, where you can enter the amount of the monthly re-payment or the number of years you want to take to pay it back (the term of the loan). You should infill only one of the proposed fields. If you enter both, then you will get an error message.
1.Build decision table based on given information


	R1	R2	R3	R4
The amount of the monthly re-payment 	Y	Y	N	N
The term of the loan	N	Y	Y	N
OUTPUT	Result	Error	Result	Error
Message		+		+

	Condition	Outcome
1	Infilled The amount of the monthly re-payment 	Application gives the result
2	Infilled The term of the loan	Application gives the result
3	Infilled The amount of the monthly re-payment  and 
The term of the loan	Application gives the error message
4	Fields are empty	Application gives the error message




